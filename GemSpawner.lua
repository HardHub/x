local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\141\187","\62\163\149\133\76\94\163"),function(v42) if (v9(v42,5 -3 )==79) then local v99=0;while true do if (v99==0) then v30=v8(v11(v42,2 -1 ,1));return "";end end else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v101,v30);v30=nil;v122=1;end if (v122==1) then return v123;end end else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=0;local v103;while true do if (0==v102) then v103=(v43/(2^(v44-1)))%((3 -1)^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;end end else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * (659 -403)) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * (16777835 -(555 + 64))) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=v34();local v54=v34();local v55=932 -(857 + 74) ;local v56=(v31(v54,1,20) * (2^32)) + v53 ;local v57=v31(v54,21,31);local v58=((v31(v54,32)==1) and  -1) or 1 ;if (v57==0) then if (v56==0) then return v58 * 0 ;else local v108=0;while true do if (v108==0) then v57=569 -(367 + 201) ;v55=0;break;end end end elseif (v57==2047) then return ((v56==0) and (v58 * (1/0))) or (v58 * NaN) ;end return v16(v58,v57-1023 ) * (v55 + (v56/(2^52))) ;end local function v36(v59) local v60=0;local v61;local v62;while true do if (v60==0) then v61=nil;if  not v59 then local v115=0;while true do if (v115==0) then v59=v34();if (v59==0) then return "";end break;end end end v60=1;end if (3==v60) then return v14(v62);end if (v60==1) then v61=v11(v27,v29,(v29 + v59) -1 );v29=v29 + v59 ;v60=2;end if (2==v60) then v62={};for v109=1, #v61 do v62[v109]=v10(v9(v11(v61,v109,v109)));end v60=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v76=1,v67 do local v77=v32();local v78;if (v77==1) then v78=v32()~=0 ;elseif (v77==(929 -(214 + 713))) then v78=v35();elseif (v77==3) then v78=v36();end v68[v76]=v78;end v66[3]=v32();for v80=1 + 0 ,v34() do local v81=0;local v82;while true do if (v81==0) then v82=v32();if (v31(v82,1,1 + 0 )==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==3) then if (v31(v120,120 -(32 + 85) ,3 + 0 )==1) then v121[4]=v68[v121[4]];end v63[v80]=v121;break;end if (v118==2) then if (v31(v120,1,1)==1) then v121[2]=v68[v121[2]];end if (v31(v120,8 -6 ,2)==1) then v121[3]=v68[v121[3]];end v118=3;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==(0 -0)) then local v131=0;while true do if (v131==0) then v121[3]=v33();v121[4]=v33();break;end end elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^(1081 -(68 + 997))) ;elseif (v119==(1273 -(226 + 1044))) then local v136=0;while true do if (v136==0) then v121[3]=v34() -(2^16) ;v121[4]=v33();break;end end end v118=2;end if (v118==0) then v119=v31(v82,2,880 -(282 + 595) );v120=v31(v82,4,1643 -(1523 + 114) );v118=1;end end end break;end end end for v83=1 + 0 ,v34() do v64[v83-1 ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[959 -(892 + 65) ];local v75=v70[3];return function(...) local v85=v73;local v86=v74;local v87=v75;local v88=v38;local v89=2 -1 ;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v106=0,v93 do if (v106>=v87) then v91[v106-v87 ]=v92[v106 + 1 ];else v95[v106]=v92[v106 + (1 -0) ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do local v107=0;while true do if (v107==0) then v97=v85[v89];v98=v97[1];v107=1;end if (v107==1) then if (v98<=51) then if (v98<=25) then if (v98<=12) then if (v98<=(355 -(87 + 263))) then if (v98<=2) then if (v98<=(180 -(67 + 113))) then v95[v97[2]]=v97[3] + v95[v97[4]] ;elseif (v98==1) then do return v95[v97[2]]();end else local v181=v97[2];v95[v181]=v95[v181](v95[v181 + 1 + 0 ]);end elseif (v98<=3) then local v138=0;local v139;local v140;while true do if (v138==1) then v95[v139 + (2 -1) ]=v140;v95[v139]=v140[v97[4]];break;end if (v138==0) then v139=v97[2];v140=v95[v97[3]];v138=1;end end elseif (v98==4) then if (v95[v97[2]]<v97[4]) then v89=v89 + 1 ;else v89=v97[3];end else local v183=0;local v184;while true do if (v183==0) then v184=v97[2];do return v95[v184],v95[v184 + 1 ];end break;end end end elseif (v98<=8) then if (v98<=6) then local v141=0;local v142;while true do if (0==v141) then v142=v97[2];do return v95[v142],v95[v142 + 1 ];end break;end end elseif (v98==7) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else local v185=0;local v186;local v187;local v188;while true do if (0==v185) then v186=v97[2];v187=v95[v186 + 2 + 0 ];v185=1;end if (1==v185) then v188=v95[v186] + v187 ;v95[v186]=v188;v185=2;end if (v185==2) then if (v187>0) then if (v188<=v95[v186 + 1 ]) then local v451=0;while true do if (v451==0) then v89=v97[3];v95[v186 + 3 ]=v188;break;end end end elseif (v188>=v95[v186 + 1 ]) then local v452=0;while true do if (v452==0) then v89=v97[3];v95[v186 + (11 -8) ]=v188;break;end end end break;end end end elseif (v98<=10) then if (v98==9) then local v189=0;local v190;local v191;local v192;local v193;while true do if (1==v189) then v90=(v192 + v190) -(2 -1) ;v193=0;v189=2;end if (v189==0) then v190=v97[2];v191,v192=v88(v95[v190](v21(v95,v190 + 1 ,v97[955 -(802 + 150) ])));v189=1;end if (2==v189) then for v398=v190,v90 do local v399=0;while true do if (v399==0) then v193=v193 + 1 ;v95[v398]=v191[v193];break;end end end break;end end else local v194=0;local v195;while true do if (v194==0) then v195=v97[2];do return v95[v195](v21(v95,v195 + 1 ,v97[3]));end break;end end end elseif (v98==11) then v95[v97[2]]=v95[v97[3]] + v97[4] ;else local v197=0;local v198;while true do if (v197==0) then v198=v97[2];v95[v198](v95[v198 + 1 ]);break;end end end elseif (v98<=(32 -14)) then if (v98<=15) then if (v98<=(10 + 3)) then local v143=0;local v144;while true do if (0==v143) then v144=v97[2];v95[v144](v21(v95,v144 + 1 ,v90));break;end end elseif (v98>14) then local v199=0;local v200;while true do if (v199==0) then v200=v97[2];v95[v200]=v95[v200](v95[v200 + (998 -(915 + 82)) ]);break;end end else local v201=v97[5 -3 ];local v202,v203=v88(v95[v201](v21(v95,v201 + 1 ,v90)));v90=(v203 + v201) -1 ;local v204=0;for v320=v201,v90 do local v321=0;while true do if (v321==0) then v204=v204 + 1 ;v95[v320]=v202[v204];break;end end end end elseif (v98<=(10 + 6)) then local v145=0;local v146;local v147;while true do if (v145==1) then for v336=1, #v94 do local v337=0;local v338;while true do if (0==v337) then v338=v94[v336];for v444=0, #v338 do local v445=0;local v446;local v447;local v448;while true do if (v445==0) then v446=v338[v444];v447=v446[1];v445=1;end if (v445==1) then v448=v446[2];if ((v447==v95) and (v448>=v146)) then local v495=0;while true do if (v495==0) then v147[v448]=v447[v448];v446[1]=v147;break;end end end break;end end end break;end end end break;end if (0==v145) then v146=v97[2 -0 ];v147={};v145=1;end end elseif (v98==17) then do return;end else local v205=v97[2];v95[v205]=v95[v205](v21(v95,v205 + (1188 -(1069 + 118)) ,v90));end elseif (v98<=21) then if (v98<=19) then v95[v97[2]]=v71[v97[3]];elseif (v98>20) then local v207=0;local v208;local v209;while true do if (v207==0) then v208=v97[2];v209=v95[v97[3]];v207=1;end if (v207==1) then v95[v208 + 1 ]=v209;v95[v208]=v209[v97[8 -4 ]];break;end end else local v210=0;local v211;while true do if (0==v210) then v211=v97[2];v95[v211](v21(v95,v211 + 1 ,v97[3]));break;end end end elseif (v98<=23) then if (v98==22) then v95[v97[2]]=v97[3]~=(0 -0) ;else do return v95[v97[2]];end end elseif (v98>(5 + 19)) then v95[v97[2]]=v72[v97[3]];else v95[v97[2]]=v97[3]~=(0 -0) ;end elseif (v98<=38) then if (v98<=31) then if (v98<=(28 + 0)) then if (v98<=26) then v95[v97[2]]={};elseif (v98==27) then local v216=0;local v217;while true do if (v216==0) then v217=v97[2];v95[v217](v21(v95,v217 + 1 ,v90));break;end end else v71[v97[794 -(368 + 423) ]]=v95[v97[6 -4 ]];end elseif (v98<=29) then v89=v97[3];elseif (v98>30) then local v220=0;local v221;while true do if (v220==0) then v221=v97[2];v95[v221]=v95[v221](v21(v95,v221 + 1 ,v97[3]));break;end end else v95[v97[2]]= #v95[v97[3]];end elseif (v98<=34) then if (v98<=32) then local v152=v97[2];local v153=v95[v152];for v180=v152 + 1 ,v90 do v15(v153,v95[v180]);end elseif (v98>33) then if (v95[v97[2]]==v95[v97[22 -(10 + 8) ]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v97[2]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=36) then if (v98>35) then v95[v97[2]]=v95[v97[3]] + v97[4] ;else v95[v97[2]]=v95[v97[3]]%v97[15 -11 ] ;end elseif (v98>37) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else local v225=0;local v226;local v227;while true do if (v225==0) then v226=v97[2];v227=v95[v226];v225=1;end if (1==v225) then for v402=v226 + (443 -(416 + 26)) ,v90 do v15(v227,v95[v402]);end break;end end end elseif (v98<=(140 -96)) then if (v98<=41) then if (v98<=39) then v95[v97[2]]=v95[v97[3]] -v95[v97[2 + 2 ]] ;elseif (v98>40) then v95[v97[2]]=v95[v97[3]] -v95[v97[6 -2 ]] ;else local v229=v97[2];v95[v229]=v95[v229]();end elseif (v98<=42) then do return;end elseif (v98>43) then for v323=v97[2],v97[3] do v95[v323]=nil;end else v95[v97[2]][v95[v97[3]]]=v97[442 -(145 + 293) ];end elseif (v98<=47) then if (v98<=45) then local v155=0;local v156;local v157;local v158;local v159;while true do if (v155==1) then v90=(v158 + v156) -1 ;v159=0;v155=2;end if (v155==2) then for v342=v156,v90 do local v343=0;while true do if (0==v343) then v159=v159 + (1487 -(998 + 488)) ;v95[v342]=v157[v159];break;end end end break;end if (0==v155) then v156=v97[2];v157,v158=v88(v95[v156](v21(v95,v156 + (431 -(44 + 386)) ,v97[3])));v155=1;end end elseif (v98>(15 + 31)) then if  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else local v233=0;local v234;while true do if (0==v233) then v234=v97[2 + 0 ];do return v21(v95,v234,v90);end break;end end end elseif (v98<=49) then if (v98==48) then v95[v97[2]]=v95[v97[3]][v97[4]];elseif (v97[2]<v95[v97[776 -(201 + 571) ]]) then v89=v89 + 1 ;else v89=v97[1141 -(116 + 1022) ];end elseif (v98==50) then v95[v97[8 -6 ]]=v97[3] + v95[v97[4]] ;else v95[v97[2]]=v95[v97[3]] + v95[v97[4]] ;end elseif (v98<=77) then if (v98<=(38 + 26)) then if (v98<=57) then if (v98<=54) then if (v98<=(189 -137)) then if (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==53) then for v326=v97[2],v97[3] do v95[v326]=nil;end elseif (v97[2]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=(195 -140)) then local v160=0;local v161;while true do if (v160==0) then v161=v97[2];do return v95[v161](v21(v95,v161 + 1 ,v97[3]));end break;end end elseif (v98==56) then v95[v97[2]]=v97[862 -(814 + 45) ];elseif (v95[v97[2]]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=60) then if (v98<=58) then v95[v97[4 -2 ]][v97[3]]=v95[v97[4]];elseif (v98>59) then v95[v97[2]]={};else v95[v97[2]]= #v95[v97[3]];end elseif (v98<=62) then if (v98==61) then if (v97[2]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else local v244=0;local v245;local v246;local v247;local v248;while true do if (0==v244) then v245=v97[2];v246,v247=v88(v95[v245](v95[v245 + 1 + 0 ]));v244=1;end if (v244==2) then for v403=v245,v90 do local v404=0;while true do if (v404==0) then v248=v248 + 1 ;v95[v403]=v246[v248];break;end end end break;end if (v244==1) then v90=(v247 + v245) -1 ;v248=0;v244=2;end end end elseif (v98>(23 + 40)) then local v249=0;local v250;local v251;local v252;while true do if (v249==2) then if (v251>0) then if (v252<=v95[v250 + (886 -(261 + 624)) ]) then local v457=0;while true do if (0==v457) then v89=v97[3];v95[v250 + 3 ]=v252;break;end end end elseif (v252>=v95[v250 + 1 ]) then local v458=0;while true do if (0==v458) then v89=v97[3];v95[v250 + (4 -1) ]=v252;break;end end end break;end if (v249==1) then v252=v95[v250] + v251 ;v95[v250]=v252;v249=2;end if (v249==0) then v250=v97[2];v251=v95[v250 + 2 ];v249=1;end end else v95[v97[1082 -(1020 + 60) ]]=v95[v97[3]]/v97[4] ;end elseif (v98<=70) then if (v98<=67) then if (v98<=65) then v95[v97[1425 -(630 + 793) ]][v95[v97[3]]]=v95[v97[4]];elseif (v98>66) then local v254=0;local v255;local v256;local v257;local v258;while true do if (2==v254) then for v405=v255,v90 do v258=v258 + 1 + 0 ;v95[v405]=v256[v258];end break;end if (v254==0) then v255=v97[2];v256,v257=v88(v95[v255](v21(v95,v255 + 1 ,v90)));v254=1;end if (v254==1) then v90=(v257 + v255) -(3 -2) ;v258=0 -0 ;v254=2;end end else local v259=0;local v260;while true do if (0==v259) then v260=v95[v97[4]];if  not v260 then v89=v89 + 1 ;else local v441=0;while true do if (v441==0) then v95[v97[2]]=v260;v89=v97[3];break;end end end break;end end end elseif (v98<=68) then local v166=0;local v167;local v168;local v169;local v170;while true do if (v166==2) then for v349=v167,v90 do local v350=0;while true do if (v350==0) then v170=v170 + 1 ;v95[v349]=v168[v170];break;end end end break;end if (v166==1) then v90=(v169 + v167) -1 ;v170=0;v166=2;end if (v166==0) then v167=v97[2];v168,v169=v88(v95[v167](v95[v167 + 1 ]));v166=1;end end elseif (v98>69) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];else v95[v97[2]][v97[3]]=v95[v97[4]];end elseif (v98<=73) then if (v98<=71) then v95[v97[2]]=v95[v97[3]];elseif (v98==72) then if (v95[v97[2]]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=75) then if (v98>74) then local v265=v97[2];local v266=v95[v265];local v267=v95[v265 + 2 ];if (v267>0) then if (v266>v95[v265 + (3 -2) ]) then v89=v97[3];else v95[v265 + 3 ]=v266;end elseif (v266<v95[v265 + 1 ]) then v89=v97[3];else v95[v265 + 3 ]=v266;end else local v268=0;local v269;while true do if (v268==0) then v269=v97[2];v95[v269]=v95[v269]();break;end end end elseif (v98==76) then local v270=0;local v271;local v272;local v273;while true do if (v270==0) then v271=v86[v97[3]];v272=nil;v270=1;end if (1==v270) then v273={};v272=v18({},{[v7("\50\16\47\251\48\35\184","\192\109\79\70\149\84\70")]=function(v412,v413) local v414=0;local v415;while true do if (v414==0) then v415=v273[v413];return v415[1][v415[2]];end end end,[v7("\101\210\54\3\215\83\227\60\3\216","\160\58\141\88\102")]=function(v416,v417,v418) local v419=0;local v420;while true do if (0==v419) then v420=v273[v417];v420[1][v420[2]]=v418;break;end end end});v270=2;end if (v270==2) then for v421=1,v97[4] do local v422=0;local v423;while true do if (v422==1) then if (v423[1]==71) then v273[v421-(1748 -(760 + 987)) ]={v95,v423[3]};else v273[v421-(1914 -(1789 + 124)) ]={v71,v423[3]};end v94[ #v94 + 1 ]=v273;break;end if (v422==0) then v89=v89 + 1 ;v423=v85[v89];v422=1;end end end v95[v97[2]]=v40(v271,v272,v72);break;end end else v95[v97[2]]=v72[v97[3]];end elseif (v98<=90) then if (v98<=83) then if (v98<=80) then if (v98<=78) then do return v95[v97[2]];end elseif (v98>79) then v95[v97[768 -(745 + 21) ]]=v95[v97[2 + 1 ]][v97[10 -6 ]];else local v278=0;local v279;while true do if (v278==0) then v279=v97[2];v95[v279](v95[v279 + 1 ]);break;end end end elseif (v98<=(317 -236)) then local v173=0;local v174;while true do if (0==v173) then v174=v97[2];do return v21(v95,v174,v174 + v97[3] );end break;end end elseif (v98>82) then if  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else local v280=v97[2];v95[v280](v21(v95,v280 + 1 ,v97[3]));end elseif (v98<=86) then if (v98<=(1 + 83)) then local v175=0;local v176;while true do if (v175==0) then v176=v95[v97[4]];if  not v176 then v89=v89 + 1 ;else local v388=0;while true do if (0==v388) then v95[v97[2]]=v176;v89=v97[3];break;end end end break;end end elseif (v98>(67 + 18)) then v95[v97[2]]=v95[v97[3]]%v95[v97[1059 -(87 + 968) ]] ;else v95[v97[2]]=v95[v97[3]]/v97[4] ;end elseif (v98<=88) then if (v98==87) then if (v95[v97[2]]<v97[4]) then v89=v89 + 1 ;else v89=v97[3];end else v89=v97[3];end elseif (v98>89) then do return v95[v97[2]]();end else local v284=0;local v285;while true do if (v284==0) then v285=v97[8 -6 ];do return v21(v95,v285,v90);end break;end end end elseif (v98<=97) then if (v98<=93) then if (v98<=(83 + 8)) then local v177=0;local v178;while true do if (v177==0) then v178=v97[2];v95[v178]=v95[v178](v21(v95,v178 + 1 ,v97[3]));break;end end elseif (v98==92) then v95[v97[2]][v95[v97[6 -3 ]]]=v97[4];else v95[v97[2]]=v95[v97[3]] + v95[v97[4]] ;end elseif (v98<=95) then if (v98>(1507 -(447 + 966))) then v71[v97[3]]=v95[v97[5 -3 ]];else v95[v97[2]]=v71[v97[3]];end elseif (v98>96) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;else local v294=0;local v295;local v296;local v297;while true do if (v294==1) then v297={};v296=v18({},{[v7("\254\140\90\196\116\190\217","\219\161\211\51\170\16")]=function(v424,v425) local v426=v297[v425];return v426[1818 -(1703 + 114) ][v426[2]];end,[v7("\106\118\38\254\185\52\91\77\45\227","\93\53\41\72\155\206")]=function(v427,v428,v429) local v430=0;local v431;while true do if (v430==0) then v431=v297[v428];v431[1][v431[2]]=v429;break;end end end});v294=2;end if (v294==2) then for v432=1,v97[4] do local v433=0;local v434;while true do if (v433==0) then v89=v89 + 1 ;v434=v85[v89];v433=1;end if (v433==1) then if (v434[1]==71) then v297[v432-1 ]={v95,v434[704 -(376 + 325) ]};else v297[v432-1 ]={v71,v434[3]};end v94[ #v94 + (1 -0) ]=v297;break;end end end v95[v97[2]]=v40(v295,v296,v72);break;end if (v294==0) then v295=v86[v97[3]];v296=nil;v294=1;end end end elseif (v98<=100) then if (v98<=(301 -203)) then v95[v97[2]]=v95[v97[3]]%v97[2 + 2 ] ;elseif (v98>(217 -118)) then local v298=0;local v299;local v300;while true do if (0==v298) then v299=v97[2];v300={};v298=1;end if (v298==1) then for v435=1, #v94 do local v436=0;local v437;while true do if (v436==0) then v437=v94[v435];for v475=0, #v437 do local v476=v437[v475];local v477=v476[1];local v478=v476[2];if ((v477==v95) and (v478>=v299)) then local v494=0;while true do if (v494==0) then v300[v478]=v477[v478];v476[1]=v300;break;end end end end break;end end end break;end end else local v301=0;local v302;while true do if (v301==0) then v302=v97[2];v95[v302]=v95[v302](v21(v95,v302 + 1 ,v90));break;end end end elseif (v98<=102) then if (v98==101) then v95[v97[2]]=v95[v97[3]];elseif (v95[v97[2]]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==103) then v95[v97[16 -(9 + 5) ]]=v97[379 -(85 + 291) ];else local v307=0;local v308;local v309;local v310;while true do if (v307==0) then v308=v97[2];v309=v95[v308];v307=1;end if (v307==1) then v310=v95[v308 + 2 ];if (v310>0) then if (v309>v95[v308 + 1 ]) then v89=v97[1268 -(243 + 1022) ];else v95[v308 + (11 -8) ]=v309;end elseif (v309<v95[v308 + 1 ]) then v89=v97[3 + 0 ];else v95[v308 + 3 ]=v309;end break;end end end v89=v89 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
