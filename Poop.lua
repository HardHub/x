local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\11\230","\218\37\200\213\188\234"),function(v42) if (v9(v42,2)==79) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";end end else local v103=0;local v104;while true do if (v103==0) then v104=v10(v8(v42,16));if v30 then local v124=v13(v104,v30);v30=nil;return v124;else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v105=0;local v106;while true do if (0==v105) then v106=(v43/(2^(v44-1)))%((5 -3)^(((v45-1) -(v44-1)) + 1)) ;return v106-(v106%(2 -1)) ;end end else local v107=(1140 -(116 + 1022))^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (1==v46) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + (1 -0) ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (1==v48) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * (272843 -207307)) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==3) then if (v61==0) then if (v60==0) then return v62 * (568 -(367 + 201)) ;else local v125=0;while true do if (v125==0) then v61=1;v59=0 + 0 ;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * ((928 -(214 + 713))/0))) or (v62 * NaN) ;end return v16(v62,v61-(3632 -2609) ) * (v59 + (v60/(2^52))) ;end if (2==v56) then v61=v31(v58,21,31);v62=((v31(v58,651 -(555 + 64) )==(932 -(857 + 74))) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,2 -1 ,20) * (2^32)) + v57 ;v56=2;end if (v56==0) then v57=v34();v58=v34();v56=1;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==0) then v65=nil;if  not v63 then local v120=0;while true do if (v120==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=1;end if (v64==2) then v66={};for v114=2 -1 , #v65 do v66[v114]=v10(v9(v11(v65,v114,v114)));end v64=3;end if (v64==3) then return v14(v66);end if (1==v64) then v65=v11(v27,v29,(v29 + v63) -(860 -(814 + 45)) );v29=v29 + v63 ;v64=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67={};local v68={};local v69={};local v70={v67,v68,nil,v69};local v71=v34();local v72={};for v80=1,v71 do local v81=v32();local v82;if (v81==1) then v82=v32()~=(0 + 0) ;elseif (v81==(1 + 1)) then v82=v35();elseif (v81==3) then v82=v36();end v72[v80]=v82;end v70[3]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,1)==0) then local v110=0;local v111;local v112;local v113;while true do if (v110==3) then if (v31(v112,3,3)==1) then v113[4]=v72[v113[1274 -(226 + 1044) ]];end v67[v84]=v113;break;end if (v110==0) then v111=v31(v85,879 -(282 + 595) ,3);v112=v31(v85,889 -(261 + 624) ,1643 -(1523 + 114) );v110=1;end if (v110==2) then if (v31(v112,1,1)==(1 + 0)) then v113[2]=v72[v113[2]];end if (v31(v112,6 -4 ,2)==(1 -0)) then v113[3]=v72[v113[1068 -(68 + 997) ]];end v110=3;end if (v110==1) then v113={v33(),v33(),nil,nil};if (v111==0) then local v132=0;while true do if (v132==0) then v113[3]=v33();v113[4]=v33();break;end end elseif (v111==(1 + 0)) then v113[4 -1 ]=v34();elseif (v111==2) then v113[1083 -(1020 + 60) ]=v34() -((1425 -(630 + 793))^(53 -37)) ;elseif (v111==(14 -11)) then v113[3]=v34() -(2^16) ;v113[4]=v33();end v110=2;end end end end for v86=1,v34() do v68[v86-(4 -3) ]=v39();end return v70;end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[119 -(32 + 85) ];local v79=v74[3 + 0 ];return function(...) local v88=v77;local v89=v78;local v90=v79;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v108=0,v96 do if (v108>=v90) then v94[v108-v90 ]=v95[v108 + 1 ];else v98[v108]=v95[v108 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v109=0;while true do if (0==v109) then v100=v88[v92];v101=v100[1];v109=1;end if (1==v109) then if (v101<=51) then if (v101<=25) then if (v101<=12) then if (v101<=5) then if (v101<=2) then if (v101<=0) then v98[v100[1915 -(1789 + 124) ]]={};elseif (v101>1) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else v98[v100[2]]=v100[1 + 2 ];end elseif (v101<=(960 -(892 + 65))) then local v140=0;local v141;local v142;local v143;local v144;while true do if (v140==2) then for v349=v141,v93 do local v350=0;while true do if (v350==0) then v144=v144 + (2 -1) ;v98[v349]=v142[v144];break;end end end break;end if (v140==1) then v93=(v143 + v141) -1 ;v144=0;v140=2;end if (0==v140) then v141=v100[2];v142,v143=v91(v98[v141](v21(v98,v141 + 1 ,v93)));v140=1;end end elseif (v101>4) then v98[v100[2]]=v98[v100[3]] + v98[v100[4]] ;else local v173=v100[2];local v174={};for v315=1 -0 , #v97 do local v316=0;local v317;while true do if (v316==0) then v317=v97[v315];for v444=0 -0 , #v317 do local v445=0;local v446;local v447;local v448;while true do if (v445==1) then v448=v446[352 -(87 + 263) ];if ((v447==v98) and (v448>=v173)) then local v482=0;while true do if (v482==0) then v174[v448]=v447[v448];v446[1]=v174;break;end end end break;end if (v445==0) then v446=v317[v444];v447=v446[1];v445=1;end end end break;end end end end elseif (v101<=8) then if (v101<=6) then local v145=0;local v146;while true do if (v145==0) then v146=v100[2];v98[v146](v21(v98,v146 + 1 ,v100[3]));break;end end elseif (v101>(3 + 4)) then local v175=0;local v176;while true do if (v175==0) then v176=v100[2];do return v21(v98,v176,v93);end break;end end else v98[v100[2]]=v100[3]~=0 ;end elseif (v101<=10) then if (v101>(189 -(67 + 113))) then v98[v100[2 + 0 ]]=v98[v100[7 -4 ]]%v98[v100[4]] ;else v98[v100[2]]=v100[3];end elseif (v101==11) then do return;end else local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==1) then v93=(v184 + v182) -1 ;v185=0;v181=2;end if (v181==0) then v182=v100[2];v183,v184=v91(v98[v182](v21(v98,v182 + 1 ,v100[3])));v181=1;end if (v181==2) then for v413=v182,v93 do local v414=0;while true do if (0==v414) then v185=v185 + 1 ;v98[v413]=v183[v185];break;end end end break;end end end elseif (v101<=18) then if (v101<=15) then if (v101<=13) then if (v98[v100[2]]<v98[v100[15 -11 ]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>14) then local v187=0;local v188;local v189;local v190;while true do if (v187==1) then v190=v98[v188] + v189 ;v98[v188]=v190;v187=2;end if (2==v187) then if (v189>0) then if (v190<=v98[v188 + 1 + 0 ]) then local v462=0;while true do if (v462==0) then v92=v100[3];v98[v188 + 3 ]=v190;break;end end end elseif (v190>=v98[v188 + 1 + 0 ]) then local v463=0;while true do if (v463==0) then v92=v100[1058 -(87 + 968) ];v98[v188 + (11 -8) ]=v190;break;end end end break;end if (v187==0) then v188=v100[4 -2 ];v189=v98[v188 + 1 + 1 ];v187=1;end end else v98[v100[2]]= #v98[v100[3]];end elseif (v101<=16) then local v147=0;local v148;while true do if (0==v147) then v148=v100[8 -6 ];do return v98[v148](v21(v98,v148 + 1 ,v100[955 -(802 + 150) ]));end break;end end elseif (v101>17) then local v192=0;local v193;while true do if (v192==0) then v193=v100[2];v98[v193](v21(v98,v193 + 1 ,v93));break;end end else local v194=0;local v195;local v196;local v197;while true do if (v194==1) then v197=v98[v195] + v196 ;v98[v195]=v197;v194=2;end if (2==v194) then if (v196>(0 -0)) then if (v197<=v98[v195 + 1 + 0 ]) then local v464=0;while true do if (v464==0) then v92=v100[3];v98[v195 + 3 ]=v197;break;end end end elseif (v197>=v98[v195 + 1 ]) then local v465=0;while true do if (v465==0) then v92=v100[6 -3 ];v98[v195 + (5 -2) ]=v197;break;end end end break;end if (v194==0) then v195=v100[2];v196=v98[v195 + 2 ];v194=1;end end end elseif (v101<=21) then if (v101<=19) then local v149=v100[2];local v150=v98[v149];local v151=v98[v149 + 2 ];if (v151>(0 + 0)) then if (v150>v98[v149 + 1 ]) then v92=v100[3];else v98[v149 + (1416 -(447 + 966)) ]=v150;end elseif (v150<v98[v149 + (998 -(915 + 82)) ]) then v92=v100[3];else v98[v149 + 3 ]=v150;end elseif (v101==(56 -36)) then v92=v100[3];else local v199=0;local v200;while true do if (v199==0) then v200=v100[2];do return v21(v98,v200,v93);end break;end end end elseif (v101<=23) then if (v101==22) then local v201=v98[v100[4]];if  not v201 then v92=v92 + 1 ;else local v355=0;while true do if (0==v355) then v98[v100[2 + 0 ]]=v201;v92=v100[8 -5 ];break;end end end else v98[v100[2]]=v98[v100[3]] + v100[1821 -(1703 + 114) ] ;end elseif (v101>(725 -(376 + 325))) then if (v100[2]==v98[v100[4 -0 ]]) then v92=v92 + 1 ;else v92=v100[3];end else local v203=0;local v204;while true do if (v203==0) then v204=v98[v100[4]];if  not v204 then v92=v92 + (1 -0) ;else local v451=0;while true do if (v451==0) then v98[v100[2]]=v204;v92=v100[3];break;end end end break;end end end elseif (v101<=38) then if (v101<=31) then if (v101<=28) then if (v101<=26) then if (v100[1189 -(1069 + 118) ]<v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101==27) then local v206=0;local v207;while true do if (v206==0) then v207=v100[2];v98[v207]=v98[v207]();break;end end else local v208=0;local v209;while true do if (v208==0) then v209=v100[5 -3 ];do return v98[v209],v98[v209 + 1 ];end break;end end end elseif (v101<=29) then v98[v100[1 + 1 ]]=v98[v100[3]]/v100[4] ;elseif (v101==(68 -38)) then local v210=0;local v211;while true do if (v210==0) then v211=v100[4 -2 ];do return v98[v211](v21(v98,v211 + (15 -(9 + 5)) ,v100[3]));end break;end end else local v212=v100[3 -1 ];local v213,v214=v91(v98[v212](v21(v98,v212 + 1 ,v93)));v93=(v214 + v212) -(377 -(85 + 291)) ;local v215=0;for v320=v212,v93 do local v321=0;while true do if (0==v321) then v215=v215 + 1 ;v98[v320]=v213[v215];break;end end end end elseif (v101<=34) then if (v101<=32) then local v153=0;local v154;local v155;local v156;while true do if (v153==1) then v156=v98[v154 + 2 ];if (v156>0) then if (v155>v98[v154 + 1 ]) then v92=v100[3];else v98[v154 + 3 ]=v155;end elseif (v155<v98[v154 + 1 ]) then v92=v100[1268 -(243 + 1022) ];else v98[v154 + 3 ]=v155;end break;end if (v153==0) then v154=v100[2];v155=v98[v154];v153=1;end end elseif (v101==33) then v98[v100[7 -5 ]][v100[3]]=v98[v100[1 + 3 ]];else for v325=v100[2],v100[3] do v98[v325]=nil;end end elseif (v101<=36) then if (v101==35) then v98[v100[2]]=v98[v100[3]] + v98[v100[4]] ;else local v219=0;local v220;local v221;while true do if (v219==1) then for v417=v220 + 1 ,v93 do v15(v221,v98[v417]);end break;end if (v219==0) then v220=v100[2];v221=v98[v220];v219=1;end end end elseif (v101==(31 + 6)) then v98[v100[1182 -(1123 + 57) ]]=v100[3] + v98[v100[4 + 0 ]] ;else local v223=v100[2];do return v98[v223],v98[v223 + 1 ];end end elseif (v101<=44) then if (v101<=41) then if (v101<=39) then v98[v100[2]]=v98[v100[257 -(163 + 91) ]] + v100[4] ;elseif (v101==40) then v75[v100[3]]=v98[v100[2]];else local v226=v89[v100[3]];local v227;local v228={};v227=v18({},{[v7("\61\64\66\0\119\7\103","\19\98\31\43\110")]=function(v327,v328) local v329=v228[v328];return v329[1][v329[2]];end,[v7("\57\32\92\194\187\123\133\2\26\74","\235\102\127\50\167\204\18")]=function(v330,v331,v332) local v333=0;local v334;while true do if (v333==0) then v334=v228[v331];v334[1][v334[2]]=v332;break;end end end});for v335=1,v100[6 -2 ] do local v336=0;local v337;while true do if (v336==1) then if (v337[1]==75) then v228[v335-1 ]={v98,v337[3]};else v228[v335-(1 + 0) ]={v75,v337[3]};end v97[ #v97 + 1 ]=v228;break;end if (v336==0) then v92=v92 + (1931 -(1869 + 61)) ;v337=v88[v92];v336=1;end end end v98[v100[2 + 0 ]]=v40(v226,v227,v76);end elseif (v101<=42) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>43) then v98[v100[793 -(368 + 423) ]]={};else v98[v100[2]]=v98[v100[3]]%v100[4] ;end elseif (v101<=47) then if (v101<=45) then if v98[v100[2]] then v92=v92 + (3 -2) ;else v92=v100[3];end elseif (v101==46) then v98[v100[2]]=v75[v100[3]];elseif  not v98[v100[2 -0 ]] then v92=v92 + 1 ;else v92=v100[9 -6 ];end elseif (v101<=49) then if (v101==48) then local v236=0;local v237;while true do if (0==v236) then v237=v100[2];v98[v237](v21(v98,v237 + 1 + 0 ,v100[3 -0 ]));break;end end else v98[v100[2]]=v76[v100[3]];end elseif (v101>50) then local v240=0;local v241;while true do if (v240==0) then v241=v100[2];v98[v241]=v98[v241](v21(v98,v241 + 1 ,v100[3]));break;end end else local v242=0;local v243;local v244;local v245;while true do if (v242==2) then for v422=1,v100[4] do v92=v92 + 1 ;local v423=v88[v92];if (v423[1]==(1046 -(140 + 831))) then v245[v422-1 ]={v98,v423[3]};else v245[v422-1 ]={v75,v423[3]};end v97[ #v97 + 1 ]=v245;end v98[v100[2]]=v40(v243,v244,v76);break;end if (v242==0) then v243=v89[v100[3]];v244=nil;v242=1;end if (v242==1) then v245={};v244=v18({},{[v7("\111\158\252\45\64\43\72","\78\48\193\149\67\36")]=function(v425,v426) local v427=0;local v428;while true do if (0==v427) then v428=v245[v426];return v428[1][v428[2]];end end end,[v7("\15\33\142\29\86\57\16\132\29\89","\33\80\126\224\120")]=function(v429,v430,v431) local v432=0;local v433;while true do if (v432==0) then v433=v245[v430];v433[1 + 0 ][v433[1476 -(1329 + 145) ]]=v431;break;end end end});v242=2;end end end elseif (v101<=77) then if (v101<=64) then if (v101<=(775 -(15 + 703))) then if (v101<=54) then if (v101<=(70 -(10 + 8))) then v98[v100[7 -5 ]][v98[v100[3]]]=v100[4];elseif (v101>(495 -(416 + 26))) then local v246=0;local v247;while true do if (v246==0) then v247=v100[2];v98[v247]=v98[v247](v21(v98,v247 + (3 -2) ,v93));break;end end else v98[v100[2]]=v76[v100[3]];end elseif (v101<=55) then do return v98[v100[2]]();end elseif (v101==56) then do return v98[v100[1 + 1 ]];end elseif (v100[2]<v98[v100[4]]) then v92=v92 + (439 -(262 + 176)) ;else v92=v100[3];end elseif (v101<=60) then if (v101<=58) then local v160=0;local v161;while true do if (v160==0) then v161=v100[2];v98[v161]=v98[v161](v98[v161 + 1 ]);break;end end elseif (v101==59) then local v250=0;local v251;while true do if (0==v250) then v251=v100[2];v98[v251](v98[v251 + 1 ]);break;end end elseif (v100[1723 -(345 + 1376) ]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=62) then if (v101>61) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[1 + 1 ]]=v98[v100[3]] -v98[v100[4]] ;end elseif (v101==63) then v98[v100[2]]=v100[3]~=0 ;else local v254=0;local v255;while true do if (v254==0) then v255=v100[2];v98[v255]=v98[v255](v21(v98,v255 + 1 ,v93));break;end end end elseif (v101<=70) then if (v101<=67) then if (v101<=65) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101>66) then v98[v100[2]][v98[v100[3]]]=v100[4];else v98[v100[2]][v100[691 -(198 + 490) ]]=v98[v100[4]];end elseif (v101<=(300 -232)) then local v163=0;local v164;while true do if (v163==0) then v164=v100[2];v98[v164]=v98[v164](v21(v98,v164 + 1 ,v100[3]));break;end end elseif (v101==69) then v98[v100[2]]= #v98[v100[3]];else local v261=v100[2];local v262,v263=v91(v98[v261](v98[v261 + (2 -1) ]));v93=(v263 + v261) -1 ;local v264=0;for v342=v261,v93 do local v343=0;while true do if (v343==0) then v264=v264 + 1 ;v98[v342]=v262[v264];break;end end end end elseif (v101<=73) then if (v101<=71) then if (v98[v100[2]]<v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>72) then if (v98[v100[3 -1 ]]<v100[4]) then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v98[v100[441 -(145 + 293) ]][v100[4]];end elseif (v101<=75) then if (v101>74) then v98[v100[2]]=v98[v100[3]];else v98[v100[2]]=v98[v100[3]][v100[1210 -(696 + 510) ]];end elseif (v101==76) then local v272=0;local v273;local v274;while true do if (v272==1) then v98[v273 + 1 ]=v274;v98[v273]=v274[v100[4]];break;end if (v272==0) then v273=v100[2];v274=v98[v100[3]];v272=1;end end else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101<=(188 -98)) then if (v101<=83) then if (v101<=(1342 -(1091 + 171))) then if (v101<=78) then if v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>79) then local v278=0;local v279;while true do if (v278==0) then v279=v100[2];v98[v279]=v98[v279]();break;end end elseif (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=(511 -(44 + 386))) then if (v98[v100[2]]<v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>82) then v98[v100[2]]=v98[v100[3]];else v98[v100[1 + 1 ]][v98[v100[3]]]=v98[v100[4]];end elseif (v101<=86) then if (v101<=(264 -180)) then v75[v100[3]]=v98[v100[2]];elseif (v101>(281 -196)) then local v285=0;local v286;local v287;while true do if (v285==0) then v286=v100[2];v287=v98[v286];v285=1;end if (v285==1) then for v436=v286 + 1 ,v93 do v15(v287,v98[v436]);end break;end end else for v344=v100[2],v100[377 -(123 + 251) ] do v98[v344]=nil;end end elseif (v101<=88) then if (v101>87) then v98[v100[2]]=v75[v100[3]];else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101>89) then do return v98[v100[1488 -(998 + 488) ]]();end else local v291=0;local v292;while true do if (v291==0) then v292=v100[9 -7 ];v98[v292]=v98[v292](v98[v292 + 1 ]);break;end end end elseif (v101<=97) then if (v101<=93) then if (v101<=91) then v98[v100[2]]=v98[v100[3]] -v98[v100[4]] ;elseif (v101>92) then if (v98[v100[2]]==v98[v100[4]]) then v92=v92 + 1 ;else v92=v100[1 + 2 ];end else local v293=0;local v294;while true do if (v293==0) then v294=v100[2];v98[v294](v21(v98,v294 + 1 ,v93));break;end end end elseif (v101<=95) then if (v101==94) then do return;end else v92=v100[701 -(208 + 490) ];end elseif (v101==96) then do return v98[v100[1 + 1 ]];end elseif (v98[v100[2 + 0 ]]==v100[2 + 2 ]) then v92=v92 + 1 ;else v92=v100[775 -(201 + 571) ];end elseif (v101<=100) then if (v101<=98) then v98[v100[2]]=v98[v100[3]]/v100[4] ;elseif (v101==99) then local v296=0;local v297;local v298;local v299;local v300;while true do if (v296==1) then v93=(v299 + v297) -(1 + 0) ;v300=0;v296=2;end if (v296==2) then for v437=v297,v93 do local v438=0;while true do if (v438==0) then v300=v300 + 1 ;v98[v437]=v298[v300];break;end end end break;end if (v296==0) then v297=v100[838 -(660 + 176) ];v298,v299=v91(v98[v297](v21(v98,v297 + 1 ,v100[3])));v296=1;end end else local v301=v100[2];v98[v301](v98[v301 + 1 ]);end elseif (v101<=102) then if (v101>(303 -(14 + 188))) then local v302=0;local v303;local v304;while true do if (0==v302) then v303=v100[2];v304={};v302=1;end if (v302==1) then for v439=1, #v97 do local v440=0;local v441;while true do if (v440==0) then v441=v97[v439];for v477=0, #v441 do local v478=0;local v479;local v480;local v481;while true do if (v478==1) then v481=v479[2];if ((v480==v98) and (v481>=v303)) then local v497=0;while true do if (v497==0) then v304[v481]=v480[v481];v479[1]=v304;break;end end end break;end if (v478==0) then v479=v441[v477];v480=v479[1];v478=1;end end end break;end end end break;end end else local v305=0;local v306;local v307;while true do if (v305==0) then v306=v100[2];v307=v98[v100[3]];v305=1;end if (v305==1) then v98[v306 + 1 ]=v307;v98[v306]=v307[v100[4]];break;end end end elseif (v101==(778 -(534 + 141))) then local v308=0;local v309;while true do if (0==v308) then v309=v100[2];do return v21(v98,v309,v309 + v100[3] );end break;end end else local v310=v100[2];local v311,v312=v91(v98[v310](v98[v310 + 1 ]));v93=(v312 + v310) -1 ;local v313=0;for v346=v310,v93 do v313=v313 + 1 ;v98[v346]=v311[v313];end end v92=v92 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
